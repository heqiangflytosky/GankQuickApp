<import name="gank-item" src="../views/gank-item"></import>
<template>
  <div class="tab-section">
    <list class="list-content">
          <list-item type="listItem" for="value in listdata">
            <gank-item item-des="{{value.desc}}" item-url="{{value.url}}" item-who="{{value.who}}" item-published-at="{{value.publishedAt}}"></gank-item>
          </list-item>
    </list>
  </div>
</template>

<style>
  .tab-section {
    flex-direction: column;
    align-items: center;
    margin: 0px;
  }
  .list-content {
    flex: 1;
    padding-left: 0px;
    padding-right: 0px;
  }
</style>

<script>
  import gankCategory from '../data/GankCategory.js'
  import request from '../utils/request.js'
  export default {

    props: [
      'index',
      'listdata',
      // 驼峰式在赋值时使用-连接
      'currentIndex',
      'contentdesc'
    ],
    private: {
      list: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N']
    },
    onInit () {

      // 监听属性变化
      this.$watch('currentIndex', 'watchCurrentIndex');
      console.log(`size = `+this.listdata.length)

      

      //console.log(`data size = `+this.gankData.length)
    },
    /**
     * 监听用户选择的索引，选中当前时触发业务逻辑
     * @param newValue
     * @param oldValue
     */
    watchCurrentIndex (newValue, oldValue) {
      if (parseInt(this.index) === this.currentIndex) {
        console.debug(`当前用户选择了这个标签：${this.index}, ${newValue}, ${oldValue}`)
        //this.listdata.push("F")
      }
    }
  }

</script>