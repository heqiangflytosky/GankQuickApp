<template>
  <div class="tab-section">
    <text>{{itemdata.title}}</text>
    <list>
    
    </list>
  </div>
</template>

<style>
  .tab-section {
    flex: 1;
    flex-direction: column;
    justify-content: center;
    background-color: #ffffff;
    margin: 10px;
  }
  .tab-section text {
    color: #FF0000;
    text-align: center;
  }
</style>

<script>
  import gankCategory from '../data/GankCategory.js'
  import request from '../utils/request.js'
  export default {
    props: [
      'index',
      'itemdata',
      // 驼峰式在赋值时使用-连接
      'currentIndex'
    ],
    private: {
      list:[]
    },
    onInit () {

      // 监听属性变化
      this.$watch('currentIndex', 'watchCurrentIndex');
      this.getData();
    },
    /**
     * 监听用户选择的索引，选中当前时触发业务逻辑
     * @param newValue
     * @param oldValue
     */
    watchCurrentIndex (newValue, oldValue) {
      if (parseInt(this.index) === this.currentIndex) {
        console.debug(`当前用户选择了这个标签：${this.index}, ${newValue}, ${oldValue}`)
      }
    },
    getData() {
        console.log(`当前显示 ${this.itemdata.title}`)
        if (this.itemdata.title === gankCategory.CATEGORY_DAILY) {
            console.log(`当前显示TTTTTTTTT`)
        } else {
            request.getGankData(this.itemdata.title, 1, 0)
            .then(function(value) {
                console.log(`拿到数据了：`)
                console.log(value)
                console.log(JSON.stringify(value.data))
                var data = JSON.parse(value.data)
                //console.log(value.data.results)
                console.log('长度： '+data.results.length)
                this.list.concat(data.results)
              },
              function(error) {

              })
        }
    }
  }

</script>