<template>
  <div class="tab-section">
    <text>{{contentdesc}}</text>

    <list class="list-content">
          <list-item type="listItem" class="item item-color" for="value in listdata">
            <text>{{value.desc}}</text>
          </list-item>
    </list>
  </div>
</template>

<style>
  .tab-section {
    flex-direction: column;
    align-items: center;
    margin: 10px;
  }
  .tab-section text {
    color: #FF0000;
    text-align: center;
  }
  .list-content {
      flex: 1;
      padding-left: 60px;
      padding-right: 60px;
    }
    .item {
      height: 150px;
      align-items: center;
      justify-content: center;
      margin-bottom: 15px;
    }
    .item-color {
      background-color: #f76160;
    }
</style>

<script>
  import gankCategory from '../data/GankCategory.js'
  import request from '../utils/request.js'
  export default {

    props: [
      'index',
      'listdata',
      // 驼峰式在赋值时使用-连接
      'currentIndex',
      'contentdesc'
    ],
    private: {
      list: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N']
    },
    onInit () {

      // 监听属性变化
      this.$watch('currentIndex', 'watchCurrentIndex');
      console.log(`size = `+this.listdata.length)

      

      //console.log(`data size = `+this.gankData.length)
    },
    /**
     * 监听用户选择的索引，选中当前时触发业务逻辑
     * @param newValue
     * @param oldValue
     */
    watchCurrentIndex (newValue, oldValue) {
      if (parseInt(this.index) === this.currentIndex) {
        console.debug(`当前用户选择了这个标签：${this.index}, ${newValue}, ${oldValue}`)
        //this.listdata.push("F")
      }
    }
  }

</script>