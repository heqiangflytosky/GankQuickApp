<import name="gank-item" src="../views/gank-item"></import>
<import name="gank-item-header" src="../views/gank-item-header"></import>
<import name="loading-view" src="../views/loading-view"></import>
<template>
  <div class="tab-section">
    <block if="{{dailydata.length === 0}}">
      <loading-view></loading-view>
    </block>
    <block else>
      <block for="item in dailydata">
        <gank-item-header title="{{item.name}}" imageurl="{{getHeadIcon(item.name)}}"></gank-item-header>
        <block if="item.name === '福利'">
          <image class="content-benefit-image" src="{{item.value[0].url}}"></image>
        </block>
        <block else for="it in item.value">
          <gank-item item-des="{{it.desc}}" item-url="{{it.url}}" item-who="{{it.who}}" item-published-at="{{it.publishedAt}}"></gank-item>
        </block>
      </block>
    </block>



  </div>
</template>

<style>
  .tab-section {
    flex-direction: column;
    align-items: center;
    margin: 0px;
  }

  .content-section {
    flex-direction: column;
  }

  .content-benefit-image {
    height: 800px;
  }

  .tab-content {
    flex: 1;
    background-color: #eeeeee;
  }

  .list-content {
    flex: 1;
    padding-left: 0px;
    padding-right: 0px;
  }
</style>

<script>
  import gankCategory from '../data/GankCategory.js'
  import request from '../utils/request.js'
  export default {

    props: [
      'index',
      'dailydata',
      // 驼峰式在赋值时使用-连接
      'currentIndex',
      'contentdesc',
      'date'
    ],
    private: {
      listD: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N']
    },
    onInit() {

      // 监听属性变化
      this.$watch('currentIndex', 'watchCurrentIndex');
      console.log(`data = ` + this.dailydata)
      this.listD = ['A', 'B', 'C', 'D']

      //console.log(`data size = `+this.gankData.length)
    },
    /**
     * 监听用户选择的索引，选中当前时触发业务逻辑
     * @param newValue
     * @param oldValue
     */
    watchCurrentIndex(newValue, oldValue) {
      if (parseInt(this.index) === this.currentIndex) {
        console.debug(`当前用户选择了这个标签：${this.index}, ${newValue}, ${oldValue}`)
        //this.listdata.push("F")
      }
    },

    getHeadIcon(name) {
      if (name === gankCategory.HEADER_CATEGORY_BENEFIT) {
        return "/Common/ic-title-benefit.png"
      } else if (name === gankCategory.HEADER_CATEGORY_ANDROID) {
        return "/Common/ic-title-android.png"
      } else if (name === gankCategory.HEADER_CATEGORY_IOS) {
        return "/Common/ic-title-ios.png"
      } else if (name === gankCategory.HEADER_CATEGORY_APP) {
        return "/Common/ic-title-app.png"
      } else if (name === gankCategory.HEADER_CATEGORY_VIDEO) {
        return "/Common/ic-title-video.png"
      } else if (name === gankCategory.HEADER_CATEGORY_EXPAND_RES) {
        return "/Common/ic-title-res.png"
      } else if (name === gankCategory.HEADER_CATEGORY_RECOMMAND) {
        return "/Common/ic-title-recommand2.png"
      }
    }
  }

</script>